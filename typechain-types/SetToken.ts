/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export declare namespace ISetToken {
  export type PositionStruct = {
    component: string;
    module: string;
    unit: BigNumberish;
    positionState: BigNumberish;
    data: BytesLike;
  };

  export type PositionStructOutput = [
    string,
    string,
    BigNumber,
    number,
    string
  ] & {
    component: string;
    module: string;
    unit: BigNumber;
    positionState: number;
    data: string;
  };
}

export interface SetTokenInterface extends utils.Interface {
  contractName: "SetToken";
  functions: {
    "addComponent(address)": FunctionFragment;
    "addExternalPositionModule(address,address)": FunctionFragment;
    "addModule(address)": FunctionFragment;
    "allowance(address,address)": FunctionFragment;
    "approve(address,uint256)": FunctionFragment;
    "balanceOf(address)": FunctionFragment;
    "burn(address,uint256)": FunctionFragment;
    "components(uint256)": FunctionFragment;
    "controller()": FunctionFragment;
    "decimals()": FunctionFragment;
    "decreaseAllowance(address,uint256)": FunctionFragment;
    "editDefaultPositionUnit(address,int256)": FunctionFragment;
    "editExternalPositionData(address,address,bytes)": FunctionFragment;
    "editExternalPositionUnit(address,address,int256)": FunctionFragment;
    "editPositionMultiplier(int256)": FunctionFragment;
    "getComponents()": FunctionFragment;
    "getDefaultPositionRealUnit(address)": FunctionFragment;
    "getExternalPositionData(address,address)": FunctionFragment;
    "getExternalPositionModules(address)": FunctionFragment;
    "getExternalPositionRealUnit(address,address)": FunctionFragment;
    "getModules()": FunctionFragment;
    "getPositions()": FunctionFragment;
    "getTotalComponentRealUnits(address)": FunctionFragment;
    "increaseAllowance(address,uint256)": FunctionFragment;
    "initializeModule()": FunctionFragment;
    "invoke(address,uint256,bytes)": FunctionFragment;
    "isComponent(address)": FunctionFragment;
    "isExternalPositionModule(address,address)": FunctionFragment;
    "isInitializedModule(address)": FunctionFragment;
    "isLocked()": FunctionFragment;
    "isPendingModule(address)": FunctionFragment;
    "lock()": FunctionFragment;
    "locker()": FunctionFragment;
    "manager()": FunctionFragment;
    "mint(address,uint256)": FunctionFragment;
    "moduleStates(address)": FunctionFragment;
    "modules(uint256)": FunctionFragment;
    "name()": FunctionFragment;
    "positionMultiplier()": FunctionFragment;
    "removeComponent(address)": FunctionFragment;
    "removeExternalPositionModule(address,address)": FunctionFragment;
    "removeModule(address)": FunctionFragment;
    "removePendingModule(address)": FunctionFragment;
    "setManager(address)": FunctionFragment;
    "symbol()": FunctionFragment;
    "totalSupply()": FunctionFragment;
    "transfer(address,uint256)": FunctionFragment;
    "transferFrom(address,address,uint256)": FunctionFragment;
    "unlock()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addComponent",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "addExternalPositionModule",
    values: [string, string]
  ): string;
  encodeFunctionData(functionFragment: "addModule", values: [string]): string;
  encodeFunctionData(
    functionFragment: "allowance",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "approve",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "balanceOf", values: [string]): string;
  encodeFunctionData(
    functionFragment: "burn",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "components",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "controller",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "decimals", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "decreaseAllowance",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "editDefaultPositionUnit",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "editExternalPositionData",
    values: [string, string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "editExternalPositionUnit",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "editPositionMultiplier",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getComponents",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDefaultPositionRealUnit",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getExternalPositionData",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getExternalPositionModules",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getExternalPositionRealUnit",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getModules",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getPositions",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTotalComponentRealUnits",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "increaseAllowance",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "initializeModule",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "invoke",
    values: [string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "isComponent", values: [string]): string;
  encodeFunctionData(
    functionFragment: "isExternalPositionModule",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "isInitializedModule",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "isLocked", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "isPendingModule",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "lock", values?: undefined): string;
  encodeFunctionData(functionFragment: "locker", values?: undefined): string;
  encodeFunctionData(functionFragment: "manager", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "mint",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "moduleStates",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "modules",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "name", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "positionMultiplier",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "removeComponent",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "removeExternalPositionModule",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "removeModule",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "removePendingModule",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "setManager", values: [string]): string;
  encodeFunctionData(functionFragment: "symbol", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "totalSupply",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transfer",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "unlock", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "addComponent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addExternalPositionModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addModule", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "allowance", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "approve", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "balanceOf", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "burn", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "components", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "controller", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "decimals", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "decreaseAllowance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "editDefaultPositionUnit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "editExternalPositionData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "editExternalPositionUnit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "editPositionMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDefaultPositionRealUnit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getExternalPositionData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getExternalPositionModules",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getExternalPositionRealUnit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getModules", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getPositions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTotalComponentRealUnits",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increaseAllowance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initializeModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "invoke", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isComponent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isExternalPositionModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isInitializedModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isLocked", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isPendingModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "lock", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "locker", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "manager", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "mint", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "moduleStates",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "modules", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "name", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "positionMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeComponent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeExternalPositionModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removePendingModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setManager", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "symbol", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "transfer", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "unlock", data: BytesLike): Result;

  events: {
    "Approval(address,address,uint256)": EventFragment;
    "ComponentAdded(address)": EventFragment;
    "ComponentRemoved(address)": EventFragment;
    "DefaultPositionUnitEdited(address,int256)": EventFragment;
    "ExternalPositionDataEdited(address,address,bytes)": EventFragment;
    "ExternalPositionUnitEdited(address,address,int256)": EventFragment;
    "Invoked(address,uint256,bytes,bytes)": EventFragment;
    "ManagerEdited(address,address)": EventFragment;
    "ModuleAdded(address)": EventFragment;
    "ModuleInitialized(address)": EventFragment;
    "ModuleRemoved(address)": EventFragment;
    "PendingModuleRemoved(address)": EventFragment;
    "PositionModuleAdded(address,address)": EventFragment;
    "PositionModuleRemoved(address,address)": EventFragment;
    "PositionMultiplierEdited(int256)": EventFragment;
    "Transfer(address,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Approval"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ComponentAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ComponentRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DefaultPositionUnitEdited"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExternalPositionDataEdited"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExternalPositionUnitEdited"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Invoked"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ManagerEdited"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ModuleAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ModuleInitialized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ModuleRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PendingModuleRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PositionModuleAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PositionModuleRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PositionMultiplierEdited"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Transfer"): EventFragment;
}

export type ApprovalEvent = TypedEvent<
  [string, string, BigNumber],
  { owner: string; spender: string; value: BigNumber }
>;

export type ApprovalEventFilter = TypedEventFilter<ApprovalEvent>;

export type ComponentAddedEvent = TypedEvent<[string], { _component: string }>;

export type ComponentAddedEventFilter = TypedEventFilter<ComponentAddedEvent>;

export type ComponentRemovedEvent = TypedEvent<
  [string],
  { _component: string }
>;

export type ComponentRemovedEventFilter =
  TypedEventFilter<ComponentRemovedEvent>;

export type DefaultPositionUnitEditedEvent = TypedEvent<
  [string, BigNumber],
  { _component: string; _realUnit: BigNumber }
>;

export type DefaultPositionUnitEditedEventFilter =
  TypedEventFilter<DefaultPositionUnitEditedEvent>;

export type ExternalPositionDataEditedEvent = TypedEvent<
  [string, string, string],
  { _component: string; _positionModule: string; _data: string }
>;

export type ExternalPositionDataEditedEventFilter =
  TypedEventFilter<ExternalPositionDataEditedEvent>;

export type ExternalPositionUnitEditedEvent = TypedEvent<
  [string, string, BigNumber],
  { _component: string; _positionModule: string; _realUnit: BigNumber }
>;

export type ExternalPositionUnitEditedEventFilter =
  TypedEventFilter<ExternalPositionUnitEditedEvent>;

export type InvokedEvent = TypedEvent<
  [string, BigNumber, string, string],
  { _target: string; _value: BigNumber; _data: string; _returnValue: string }
>;

export type InvokedEventFilter = TypedEventFilter<InvokedEvent>;

export type ManagerEditedEvent = TypedEvent<
  [string, string],
  { _newManager: string; _oldManager: string }
>;

export type ManagerEditedEventFilter = TypedEventFilter<ManagerEditedEvent>;

export type ModuleAddedEvent = TypedEvent<[string], { _module: string }>;

export type ModuleAddedEventFilter = TypedEventFilter<ModuleAddedEvent>;

export type ModuleInitializedEvent = TypedEvent<[string], { _module: string }>;

export type ModuleInitializedEventFilter =
  TypedEventFilter<ModuleInitializedEvent>;

export type ModuleRemovedEvent = TypedEvent<[string], { _module: string }>;

export type ModuleRemovedEventFilter = TypedEventFilter<ModuleRemovedEvent>;

export type PendingModuleRemovedEvent = TypedEvent<
  [string],
  { _module: string }
>;

export type PendingModuleRemovedEventFilter =
  TypedEventFilter<PendingModuleRemovedEvent>;

export type PositionModuleAddedEvent = TypedEvent<
  [string, string],
  { _component: string; _positionModule: string }
>;

export type PositionModuleAddedEventFilter =
  TypedEventFilter<PositionModuleAddedEvent>;

export type PositionModuleRemovedEvent = TypedEvent<
  [string, string],
  { _component: string; _positionModule: string }
>;

export type PositionModuleRemovedEventFilter =
  TypedEventFilter<PositionModuleRemovedEvent>;

export type PositionMultiplierEditedEvent = TypedEvent<
  [BigNumber],
  { _newMultiplier: BigNumber }
>;

export type PositionMultiplierEditedEventFilter =
  TypedEventFilter<PositionMultiplierEditedEvent>;

export type TransferEvent = TypedEvent<
  [string, string, BigNumber],
  { from: string; to: string; value: BigNumber }
>;

export type TransferEventFilter = TypedEventFilter<TransferEvent>;

export interface SetToken extends BaseContract {
  contractName: "SetToken";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: SetTokenInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addComponent(
      _component: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addExternalPositionModule(
      _component: string,
      _positionModule: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addModule(
      _module: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    allowance(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    approve(
      spender: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    balanceOf(account: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    burn(
      _account: string,
      _quantity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    components(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    controller(overrides?: CallOverrides): Promise<[string]>;

    decimals(overrides?: CallOverrides): Promise<[number]>;

    decreaseAllowance(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    editDefaultPositionUnit(
      _component: string,
      _realUnit: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    editExternalPositionData(
      _component: string,
      _positionModule: string,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    editExternalPositionUnit(
      _component: string,
      _positionModule: string,
      _realUnit: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    editPositionMultiplier(
      _newMultiplier: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getComponents(overrides?: CallOverrides): Promise<[string[]]>;

    getDefaultPositionRealUnit(
      _component: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getExternalPositionData(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getExternalPositionModules(
      _component: string,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    getExternalPositionRealUnit(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getModules(overrides?: CallOverrides): Promise<[string[]]>;

    getPositions(
      overrides?: CallOverrides
    ): Promise<[ISetToken.PositionStructOutput[]]>;

    getTotalComponentRealUnits(
      _component: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    increaseAllowance(
      spender: string,
      addedValue: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    initializeModule(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    invoke(
      _target: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    isComponent(
      _component: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isExternalPositionModule(
      _component: string,
      _module: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isInitializedModule(
      _module: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isLocked(overrides?: CallOverrides): Promise<[boolean]>;

    isPendingModule(
      _module: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    lock(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    locker(overrides?: CallOverrides): Promise<[string]>;

    manager(overrides?: CallOverrides): Promise<[string]>;

    mint(
      _account: string,
      _quantity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    moduleStates(arg0: string, overrides?: CallOverrides): Promise<[number]>;

    modules(arg0: BigNumberish, overrides?: CallOverrides): Promise<[string]>;

    name(overrides?: CallOverrides): Promise<[string]>;

    positionMultiplier(overrides?: CallOverrides): Promise<[BigNumber]>;

    removeComponent(
      _component: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeExternalPositionModule(
      _component: string,
      _positionModule: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeModule(
      _module: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removePendingModule(
      _module: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setManager(
      _manager: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    symbol(overrides?: CallOverrides): Promise<[string]>;

    totalSupply(overrides?: CallOverrides): Promise<[BigNumber]>;

    transfer(
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transferFrom(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    unlock(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  addComponent(
    _component: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addExternalPositionModule(
    _component: string,
    _positionModule: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addModule(
    _module: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  allowance(
    owner: string,
    spender: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  approve(
    spender: string,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  balanceOf(account: string, overrides?: CallOverrides): Promise<BigNumber>;

  burn(
    _account: string,
    _quantity: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  components(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  controller(overrides?: CallOverrides): Promise<string>;

  decimals(overrides?: CallOverrides): Promise<number>;

  decreaseAllowance(
    spender: string,
    subtractedValue: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  editDefaultPositionUnit(
    _component: string,
    _realUnit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  editExternalPositionData(
    _component: string,
    _positionModule: string,
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  editExternalPositionUnit(
    _component: string,
    _positionModule: string,
    _realUnit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  editPositionMultiplier(
    _newMultiplier: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getComponents(overrides?: CallOverrides): Promise<string[]>;

  getDefaultPositionRealUnit(
    _component: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getExternalPositionData(
    _component: string,
    _positionModule: string,
    overrides?: CallOverrides
  ): Promise<string>;

  getExternalPositionModules(
    _component: string,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getExternalPositionRealUnit(
    _component: string,
    _positionModule: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getModules(overrides?: CallOverrides): Promise<string[]>;

  getPositions(
    overrides?: CallOverrides
  ): Promise<ISetToken.PositionStructOutput[]>;

  getTotalComponentRealUnits(
    _component: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  increaseAllowance(
    spender: string,
    addedValue: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  initializeModule(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  invoke(
    _target: string,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  isComponent(_component: string, overrides?: CallOverrides): Promise<boolean>;

  isExternalPositionModule(
    _component: string,
    _module: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isInitializedModule(
    _module: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isLocked(overrides?: CallOverrides): Promise<boolean>;

  isPendingModule(_module: string, overrides?: CallOverrides): Promise<boolean>;

  lock(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  locker(overrides?: CallOverrides): Promise<string>;

  manager(overrides?: CallOverrides): Promise<string>;

  mint(
    _account: string,
    _quantity: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  moduleStates(arg0: string, overrides?: CallOverrides): Promise<number>;

  modules(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  name(overrides?: CallOverrides): Promise<string>;

  positionMultiplier(overrides?: CallOverrides): Promise<BigNumber>;

  removeComponent(
    _component: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeExternalPositionModule(
    _component: string,
    _positionModule: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeModule(
    _module: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removePendingModule(
    _module: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setManager(
    _manager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  symbol(overrides?: CallOverrides): Promise<string>;

  totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

  transfer(
    recipient: string,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transferFrom(
    sender: string,
    recipient: string,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  unlock(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addComponent(_component: string, overrides?: CallOverrides): Promise<void>;

    addExternalPositionModule(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<void>;

    addModule(_module: string, overrides?: CallOverrides): Promise<void>;

    allowance(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    approve(
      spender: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    balanceOf(account: string, overrides?: CallOverrides): Promise<BigNumber>;

    burn(
      _account: string,
      _quantity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    components(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    controller(overrides?: CallOverrides): Promise<string>;

    decimals(overrides?: CallOverrides): Promise<number>;

    decreaseAllowance(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    editDefaultPositionUnit(
      _component: string,
      _realUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    editExternalPositionData(
      _component: string,
      _positionModule: string,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    editExternalPositionUnit(
      _component: string,
      _positionModule: string,
      _realUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    editPositionMultiplier(
      _newMultiplier: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getComponents(overrides?: CallOverrides): Promise<string[]>;

    getDefaultPositionRealUnit(
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getExternalPositionData(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<string>;

    getExternalPositionModules(
      _component: string,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getExternalPositionRealUnit(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getModules(overrides?: CallOverrides): Promise<string[]>;

    getPositions(
      overrides?: CallOverrides
    ): Promise<ISetToken.PositionStructOutput[]>;

    getTotalComponentRealUnits(
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    increaseAllowance(
      spender: string,
      addedValue: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    initializeModule(overrides?: CallOverrides): Promise<void>;

    invoke(
      _target: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    isComponent(
      _component: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isExternalPositionModule(
      _component: string,
      _module: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isInitializedModule(
      _module: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isLocked(overrides?: CallOverrides): Promise<boolean>;

    isPendingModule(
      _module: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    lock(overrides?: CallOverrides): Promise<void>;

    locker(overrides?: CallOverrides): Promise<string>;

    manager(overrides?: CallOverrides): Promise<string>;

    mint(
      _account: string,
      _quantity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    moduleStates(arg0: string, overrides?: CallOverrides): Promise<number>;

    modules(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    name(overrides?: CallOverrides): Promise<string>;

    positionMultiplier(overrides?: CallOverrides): Promise<BigNumber>;

    removeComponent(
      _component: string,
      overrides?: CallOverrides
    ): Promise<void>;

    removeExternalPositionModule(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<void>;

    removeModule(_module: string, overrides?: CallOverrides): Promise<void>;

    removePendingModule(
      _module: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setManager(_manager: string, overrides?: CallOverrides): Promise<void>;

    symbol(overrides?: CallOverrides): Promise<string>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    transfer(
      recipient: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    transferFrom(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    unlock(overrides?: CallOverrides): Promise<void>;
  };

  filters: {
    "Approval(address,address,uint256)"(
      owner?: string | null,
      spender?: string | null,
      value?: null
    ): ApprovalEventFilter;
    Approval(
      owner?: string | null,
      spender?: string | null,
      value?: null
    ): ApprovalEventFilter;

    "ComponentAdded(address)"(
      _component?: string | null
    ): ComponentAddedEventFilter;
    ComponentAdded(_component?: string | null): ComponentAddedEventFilter;

    "ComponentRemoved(address)"(
      _component?: string | null
    ): ComponentRemovedEventFilter;
    ComponentRemoved(_component?: string | null): ComponentRemovedEventFilter;

    "DefaultPositionUnitEdited(address,int256)"(
      _component?: string | null,
      _realUnit?: null
    ): DefaultPositionUnitEditedEventFilter;
    DefaultPositionUnitEdited(
      _component?: string | null,
      _realUnit?: null
    ): DefaultPositionUnitEditedEventFilter;

    "ExternalPositionDataEdited(address,address,bytes)"(
      _component?: string | null,
      _positionModule?: string | null,
      _data?: null
    ): ExternalPositionDataEditedEventFilter;
    ExternalPositionDataEdited(
      _component?: string | null,
      _positionModule?: string | null,
      _data?: null
    ): ExternalPositionDataEditedEventFilter;

    "ExternalPositionUnitEdited(address,address,int256)"(
      _component?: string | null,
      _positionModule?: string | null,
      _realUnit?: null
    ): ExternalPositionUnitEditedEventFilter;
    ExternalPositionUnitEdited(
      _component?: string | null,
      _positionModule?: string | null,
      _realUnit?: null
    ): ExternalPositionUnitEditedEventFilter;

    "Invoked(address,uint256,bytes,bytes)"(
      _target?: string | null,
      _value?: BigNumberish | null,
      _data?: null,
      _returnValue?: null
    ): InvokedEventFilter;
    Invoked(
      _target?: string | null,
      _value?: BigNumberish | null,
      _data?: null,
      _returnValue?: null
    ): InvokedEventFilter;

    "ManagerEdited(address,address)"(
      _newManager?: null,
      _oldManager?: null
    ): ManagerEditedEventFilter;
    ManagerEdited(
      _newManager?: null,
      _oldManager?: null
    ): ManagerEditedEventFilter;

    "ModuleAdded(address)"(_module?: string | null): ModuleAddedEventFilter;
    ModuleAdded(_module?: string | null): ModuleAddedEventFilter;

    "ModuleInitialized(address)"(
      _module?: string | null
    ): ModuleInitializedEventFilter;
    ModuleInitialized(_module?: string | null): ModuleInitializedEventFilter;

    "ModuleRemoved(address)"(_module?: string | null): ModuleRemovedEventFilter;
    ModuleRemoved(_module?: string | null): ModuleRemovedEventFilter;

    "PendingModuleRemoved(address)"(
      _module?: string | null
    ): PendingModuleRemovedEventFilter;
    PendingModuleRemoved(
      _module?: string | null
    ): PendingModuleRemovedEventFilter;

    "PositionModuleAdded(address,address)"(
      _component?: string | null,
      _positionModule?: string | null
    ): PositionModuleAddedEventFilter;
    PositionModuleAdded(
      _component?: string | null,
      _positionModule?: string | null
    ): PositionModuleAddedEventFilter;

    "PositionModuleRemoved(address,address)"(
      _component?: string | null,
      _positionModule?: string | null
    ): PositionModuleRemovedEventFilter;
    PositionModuleRemoved(
      _component?: string | null,
      _positionModule?: string | null
    ): PositionModuleRemovedEventFilter;

    "PositionMultiplierEdited(int256)"(
      _newMultiplier?: null
    ): PositionMultiplierEditedEventFilter;
    PositionMultiplierEdited(
      _newMultiplier?: null
    ): PositionMultiplierEditedEventFilter;

    "Transfer(address,address,uint256)"(
      from?: string | null,
      to?: string | null,
      value?: null
    ): TransferEventFilter;
    Transfer(
      from?: string | null,
      to?: string | null,
      value?: null
    ): TransferEventFilter;
  };

  estimateGas: {
    addComponent(
      _component: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addExternalPositionModule(
      _component: string,
      _positionModule: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addModule(
      _module: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    allowance(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    approve(
      spender: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    balanceOf(account: string, overrides?: CallOverrides): Promise<BigNumber>;

    burn(
      _account: string,
      _quantity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    components(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    controller(overrides?: CallOverrides): Promise<BigNumber>;

    decimals(overrides?: CallOverrides): Promise<BigNumber>;

    decreaseAllowance(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    editDefaultPositionUnit(
      _component: string,
      _realUnit: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    editExternalPositionData(
      _component: string,
      _positionModule: string,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    editExternalPositionUnit(
      _component: string,
      _positionModule: string,
      _realUnit: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    editPositionMultiplier(
      _newMultiplier: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getComponents(overrides?: CallOverrides): Promise<BigNumber>;

    getDefaultPositionRealUnit(
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getExternalPositionData(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getExternalPositionModules(
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getExternalPositionRealUnit(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getModules(overrides?: CallOverrides): Promise<BigNumber>;

    getPositions(overrides?: CallOverrides): Promise<BigNumber>;

    getTotalComponentRealUnits(
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    increaseAllowance(
      spender: string,
      addedValue: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    initializeModule(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    invoke(
      _target: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    isComponent(
      _component: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isExternalPositionModule(
      _component: string,
      _module: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isInitializedModule(
      _module: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isLocked(overrides?: CallOverrides): Promise<BigNumber>;

    isPendingModule(
      _module: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    lock(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    locker(overrides?: CallOverrides): Promise<BigNumber>;

    manager(overrides?: CallOverrides): Promise<BigNumber>;

    mint(
      _account: string,
      _quantity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    moduleStates(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    modules(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<BigNumber>;

    positionMultiplier(overrides?: CallOverrides): Promise<BigNumber>;

    removeComponent(
      _component: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeExternalPositionModule(
      _component: string,
      _positionModule: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeModule(
      _module: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removePendingModule(
      _module: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setManager(
      _manager: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    symbol(overrides?: CallOverrides): Promise<BigNumber>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    transfer(
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transferFrom(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    unlock(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addComponent(
      _component: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addExternalPositionModule(
      _component: string,
      _positionModule: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addModule(
      _module: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    allowance(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    approve(
      spender: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    balanceOf(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    burn(
      _account: string,
      _quantity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    components(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    controller(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    decimals(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    decreaseAllowance(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    editDefaultPositionUnit(
      _component: string,
      _realUnit: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    editExternalPositionData(
      _component: string,
      _positionModule: string,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    editExternalPositionUnit(
      _component: string,
      _positionModule: string,
      _realUnit: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    editPositionMultiplier(
      _newMultiplier: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getComponents(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getDefaultPositionRealUnit(
      _component: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getExternalPositionData(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getExternalPositionModules(
      _component: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getExternalPositionRealUnit(
      _component: string,
      _positionModule: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getModules(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getPositions(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getTotalComponentRealUnits(
      _component: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    increaseAllowance(
      spender: string,
      addedValue: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    initializeModule(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    invoke(
      _target: string,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    isComponent(
      _component: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isExternalPositionModule(
      _component: string,
      _module: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isInitializedModule(
      _module: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isLocked(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    isPendingModule(
      _module: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    lock(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    locker(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    manager(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    mint(
      _account: string,
      _quantity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    moduleStates(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    modules(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    positionMultiplier(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    removeComponent(
      _component: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeExternalPositionModule(
      _component: string,
      _positionModule: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeModule(
      _module: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removePendingModule(
      _module: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setManager(
      _manager: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transfer(
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transferFrom(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    unlock(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
