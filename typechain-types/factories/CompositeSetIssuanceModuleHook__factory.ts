/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CompositeSetIssuanceModuleHook,
  CompositeSetIssuanceModuleHookInterface,
} from "../CompositeSetIssuanceModuleHook";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IController",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_quote",
        type: "address",
      },
      {
        internalType: "contract IUniswapV2Router",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract ISetToken",
        name: "_setToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_quoteQuantity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_componentQuantity",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_component",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "componentIssueHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISetToken",
        name: "_setToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_quoteQuantity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_setTokenQuantity",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_component",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "componentRedeemHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "contract IController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISetToken",
        name: "_setToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISetToken",
        name: "_setToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_setTokenQuantity",
        type: "uint256",
      },
    ],
    name: "moduleIssueHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISetToken",
        name: "_setToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_setTokenQuantity",
        type: "uint256",
      },
    ],
    name: "moduleRedeemHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "quote",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IUniswapV2Router",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516116153803806116158339818101604052606081101561003357600080fd5b81019080805190602001909291908051906020019092919080519060200190929190505050826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506114e98061012c6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063c153dd071161005b578063c153dd071461022d578063c4d66de81461027b578063f77c4791146102bf578063f887ea401461030957610088565b80633fe6106b1461008d578063697deba5146100db5780638c3eee221461015f578063999b93af146101e3575b600080fd5b6100d9600480360360408110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610353565b005b61015d600480360360a08110156100f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610357565b005b6101e1600480360360a081101561017557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610425565b005b6101eb610600565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102796004803603604081101561024357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610626565b005b6102bd6004803603602081101561029157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061062a565b005b6102c761068d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103116106b2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b5050565b61038485600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866106d8565b60606103928684868861070b565b905083816001815181106103a257fe5b60200260200101511461041d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f436f6d706f736974653a20556e64657369726564206f2f70207377617000000081525060200191505060405180910390fd5b505050505050565b60008573ffffffffffffffffffffffffffffffffffffffff166322ebeba484306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156104d857600080fd5b505afa1580156104ec573d6000803e3d6000fd5b505050506040513d602081101561050257600080fd5b81019080805190602001909291905050509050600061053261052383610789565b8661080990919063ffffffff16565b90508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb88836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156105bb57600080fd5b505af11580156105cf573d6000803e3d6000fd5b505050506040513d60208110156105e557600080fd5b81019080805190602001909291905050505050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5050565b8073ffffffffffffffffffffffffffffffffffffffff16630ffe0f1e6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561067257600080fd5b505af1158015610686573d6000803e3d6000fd5b5050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6107068383600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610840565b505050565b6060600061074d6040518060400160405280600781526020017f554e495357415000000000000000000000000000000000000000000000000000815250610afc565b905061077e818686868a73ffffffffffffffffffffffffffffffffffffffff16610b1b90949392919063ffffffff16565b915050949350505050565b600080821215610801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f53616665436173743a2076616c7565206d75737420626520706f73697469766581525060200191505060405180910390fd5b819050919050565b6000610838670de0b6b3a764000061082a848661112c90919063ffffffff16565b6111b290919063ffffffff16565b905092915050565b60608282604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001925050506040516020818303038152906040527f095ea7b3000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090508473ffffffffffffffffffffffffffffffffffffffff16638f6f0332856000846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156109ad578082015181840152602081019050610992565b50505050905090810190601f1680156109da5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1580156109fb57600080fd5b505af1158015610a0f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610a3957600080fd5b8101908080516040519392919084640100000000821115610a5957600080fd5b83820191506020820185811115610a6f57600080fd5b8251866001820283011164010000000082111715610a8c57600080fd5b8083526020830192505050908051906020019080838360005b83811015610ac0578082015181840152602081019050610aa5565b50505050905090810190601f168015610aed5780820380516001836020036101000a031916815260200191505b50604052505050505050505050565b600080610b088361123b565b9050610b138161124c565b915050919050565b60608573ffffffffffffffffffffffffffffffffffffffff166399d50d5d6040518163ffffffff1660e01b815260040160006040518083038186803b158015610b6357600080fd5b505afa158015610b77573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610ba157600080fd5b8101908080516040519392919084640100000000821115610bc157600080fd5b83820191506020820185811115610bd757600080fd5b8251866020820283011164010000000082111715610bf457600080fd5b8083526020830192505050908051906020019060200280838360005b83811015610c2b578082015181840152602081019050610c10565b50505050905001604052505050600081518110610c4457fe5b602002602001015150600080600060608873ffffffffffffffffffffffffffffffffffffffff1663fd76dd55858a8d8b8b60006040518763ffffffff1660e01b8152600401808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018215151515815260200180602001828103825260008152602001602001975050505050505050600060405180830381600087803b158015610d6c57600080fd5b505af1158015610d80573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506060811015610daa57600080fd5b81019080805190602001909291908051906020019092919080516040519392919084640100000000821115610dde57600080fd5b83820191506020820185811115610df457600080fd5b8251866001820283011164010000000082111715610e1157600080fd5b8083526020830192505050908051906020019080838360005b83811015610e45578082015181840152602081019050610e2a565b50505050905090810190601f168015610e725780820380516001836020036101000a031916815260200191505b5060405250505092509250925060608a73ffffffffffffffffffffffffffffffffffffffff16638f6f03328585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610f27578082015181840152602081019050610f0c565b50505050905090810190601f168015610f545780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015610f7557600080fd5b505af1158015610f89573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610fb357600080fd5b8101908080516040519392919084640100000000821115610fd357600080fd5b83820191506020820185811115610fe957600080fd5b825186600182028301116401000000008211171561100657600080fd5b8083526020830192505050908051906020019080838360005b8381101561103a57808201518184015260208101905061101f565b50505050905090810190601f1680156110675780820380516001836020036101000a031916815260200191505b50604052505050905080806020019051602081101561108557600080fd5b81019080805160405193929190846401000000008211156110a557600080fd5b838201915060208201858111156110bb57600080fd5b82518660208202830111640100000000821117156110d857600080fd5b8083526020830192505050908051906020019060200280838360005b8381101561110f5780820151818401526020810190506110f4565b505050509050016040525050509550505050505095945050505050565b60008083141561113f57600090506111ac565b600082840290508284828161115057fe5b04146111a7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806114936021913960400191505060405180910390fd5b809150505b92915050565b6000808211611229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b81838161123257fe5b04905092915050565b600081805190602001209050919050565b60008061128f6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113fc565b73ffffffffffffffffffffffffffffffffffffffff1663e6d642c530856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b15801561131357600080fd5b505afa158015611327573d6000803e3d6000fd5b505050506040513d602081101561133d57600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156113f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4d7573742062652076616c69642061646170746572000000000000000000000081525060200191505060405180910390fd5b80915050919050565b60008173ffffffffffffffffffffffffffffffffffffffff1663e765ced660006040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561145057600080fd5b505afa158015611464573d6000803e3d6000fd5b505050506040513d602081101561147a57600080fd5b8101908080519060200190929190505050905091905056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220e77ccba0886fe829aa2b5589ae0a414c54dd1ca7e6ce7c3bb01d2589328679dd64736f6c634300060a0033";

type CompositeSetIssuanceModuleHookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompositeSetIssuanceModuleHookConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompositeSetIssuanceModuleHook__factory extends ContractFactory {
  constructor(...args: CompositeSetIssuanceModuleHookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CompositeSetIssuanceModuleHook";
  }

  deploy(
    _controller: string,
    _quote: string,
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompositeSetIssuanceModuleHook> {
    return super.deploy(
      _controller,
      _quote,
      _router,
      overrides || {}
    ) as Promise<CompositeSetIssuanceModuleHook>;
  }
  getDeployTransaction(
    _controller: string,
    _quote: string,
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _controller,
      _quote,
      _router,
      overrides || {}
    );
  }
  attach(address: string): CompositeSetIssuanceModuleHook {
    return super.attach(address) as CompositeSetIssuanceModuleHook;
  }
  connect(signer: Signer): CompositeSetIssuanceModuleHook__factory {
    return super.connect(signer) as CompositeSetIssuanceModuleHook__factory;
  }
  static readonly contractName: "CompositeSetIssuanceModuleHook";
  public readonly contractName: "CompositeSetIssuanceModuleHook";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompositeSetIssuanceModuleHookInterface {
    return new utils.Interface(_abi) as CompositeSetIssuanceModuleHookInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompositeSetIssuanceModuleHook {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CompositeSetIssuanceModuleHook;
  }
}
