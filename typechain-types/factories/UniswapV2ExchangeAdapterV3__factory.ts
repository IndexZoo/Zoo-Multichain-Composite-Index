/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UniswapV2ExchangeAdapterV3,
  UniswapV2ExchangeAdapterV3Interface,
} from "../UniswapV2ExchangeAdapterV3";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getSpender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sourceToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_destinationToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_destinationAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_exactQuantity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_edgedQuantity",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_shouldSwapExactTokensForTokens",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "getTradeCalldata",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610add380380610add83398181016040528101906100329190610084565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050506100f6565b60008151905061007e816100df565b92915050565b60006020828403121561009657600080fd5b60006100a48482850161006f565b91505092915050565b60006100b8826100bf565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100e8816100ad565b81146100f357600080fd5b50565b60805160601c6109c261011b6000398060b8528060de52806102de52506109c26000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063334fc28914610046578063f887ea4014610064578063fd76dd5514610082575b600080fd5b61004e6100b4565b60405161005b9190610687565b60405180910390f35b61006c6100dc565b6040516100799190610687565b60405180910390f35b61009c60048036038101906100979190610459565b610100565b6040516100ab939291906106a2565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080606080600080865114156101f357600267ffffffffffffffff8111801561012957600080fd5b506040519080825280602002602001820160405280156101585781602001602082028036833780820191505090505b5091508b8260008151811061016957fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508a826001815181106101b157fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050869050610210565b85806020019051810190610207919061050f565b80925081935050505b6060816102355760405180608001604052806043815260200161094a6043913961024f565b604051806080016040528060438152602001610907604391395b8a8a858e426040516024016102689594939291906106e0565b604051602081830303815290604052906040516102859190610670565b60405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090507f00000000000000000000000000000000000000000000000000000000000000006000828191509550955095505050509750975097945050505050565b600081359050610328816108c1565b92915050565b60008151905061033d816108c1565b92915050565b600082601f83011261035457600080fd5b815161036761036282610767565b61073a565b9150818183526020840193506020810190508385602084028201111561038c57600080fd5b60005b838110156103bc57816103a2888261032e565b84526020840193506020830192505060018101905061038f565b5050505092915050565b6000813590506103d5816108d8565b92915050565b6000815190506103ea816108d8565b92915050565b600082601f83011261040157600080fd5b813561041461040f8261078f565b61073a565b9150808252602083016020830185838301111561043057600080fd5b61043b83828461086e565b50505092915050565b600081359050610453816108ef565b92915050565b600080600080600080600060e0888a03121561047457600080fd5b60006104828a828b01610319565b97505060206104938a828b01610319565b96505060406104a48a828b01610319565b95505060606104b58a828b01610444565b94505060806104c68a828b01610444565b93505060a06104d78a828b016103c6565b92505060c088013567ffffffffffffffff8111156104f457600080fd5b6105008a828b016103f0565b91505092959891949750929550565b6000806040838503121561052257600080fd5b600083015167ffffffffffffffff81111561053c57600080fd5b61054885828601610343565b9250506020610559858286016103db565b9150509250929050565b600061056f838361057b565b60208301905092915050565b61058481610826565b82525050565b61059381610826565b82525050565b60006105a4826107cb565b6105ae81856107f9565b93506105b9836107bb565b8060005b838110156105ea5781516105d18882610563565b97506105dc836107ec565b9250506001810190506105bd565b5085935050505092915050565b6000610602826107d6565b61060c818561080a565b935061061c81856020860161087d565b610625816108b0565b840191505092915050565b600061063b826107e1565b610645818561081b565b935061065581856020860161087d565b80840191505092915050565b61066a81610864565b82525050565b600061067c8284610630565b915081905092915050565b600060208201905061069c600083018461058a565b92915050565b60006060820190506106b7600083018661058a565b6106c46020830185610661565b81810360408301526106d681846105f7565b9050949350505050565b600060a0820190506106f56000830188610661565b6107026020830187610661565b81810360408301526107148186610599565b9050610723606083018561058a565b6107306080830184610661565b9695505050505050565b6000604051905081810181811067ffffffffffffffff8211171561075d57600080fd5b8060405250919050565b600067ffffffffffffffff82111561077e57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156107a657600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061083182610844565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561089b578082015181840152602081019050610880565b838111156108aa576000848401525b50505050565b6000601f19601f8301169050919050565b6108ca81610826565b81146108d557600080fd5b50565b6108e181610838565b81146108ec57600080fd5b50565b6108f881610864565b811461090357600080fd5b5056fe737761704578616374546f6b656e73466f72546f6b656e732875696e743235362c75696e743235362c616464726573735b5d2c616464726573732c75696e743235362973776170546f6b656e73466f724578616374546f6b656e732875696e743235362c75696e743235362c616464726573735b5d2c616464726573732c75696e7432353629a26469706673582212201016633c71a60256c19d821b777cf60e6d4c5bbb1c43a355145f24e9a2f3939364736f6c634300060a0033";

type UniswapV2ExchangeAdapterV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV2ExchangeAdapterV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV2ExchangeAdapterV3__factory extends ContractFactory {
  constructor(...args: UniswapV2ExchangeAdapterV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniswapV2ExchangeAdapterV3";
  }

  deploy(
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapV2ExchangeAdapterV3> {
    return super.deploy(
      _router,
      overrides || {}
    ) as Promise<UniswapV2ExchangeAdapterV3>;
  }
  getDeployTransaction(
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_router, overrides || {});
  }
  attach(address: string): UniswapV2ExchangeAdapterV3 {
    return super.attach(address) as UniswapV2ExchangeAdapterV3;
  }
  connect(signer: Signer): UniswapV2ExchangeAdapterV3__factory {
    return super.connect(signer) as UniswapV2ExchangeAdapterV3__factory;
  }
  static readonly contractName: "UniswapV2ExchangeAdapterV3";
  public readonly contractName: "UniswapV2ExchangeAdapterV3";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV2ExchangeAdapterV3Interface {
    return new utils.Interface(_abi) as UniswapV2ExchangeAdapterV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV2ExchangeAdapterV3 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UniswapV2ExchangeAdapterV3;
  }
}
