/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UniswapV2Router02Mock,
  UniswapV2Router02MockInterface,
} from "../UniswapV2Router02Mock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountTokenDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidityETH",
    outputs: [
      {
        internalType: "uint256",
        name: "amountToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
    ],
    name: "getAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "paths",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidityETH",
    outputs: [
      {
        internalType: "uint256",
        name: "amountToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETH",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "approveMax",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "removeLiquidityETHWithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "amountToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETH",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "approveMax",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "removeLiquidityWithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapETHForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactETHForTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForETH",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactETH",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506124c1806100206000396000f3fe60806040526004361061012a5760003560e01c80638803dbee116100ab578063d06ca61f1161006f578063d06ca61f14610c56578063ded9382a14610d3b578063e2dc5ad814610e1d578063e8e3370014610ea2578063f305d71914610f88578063fb3bdb41146110365761012a565b80638803dbee14610958578063ad5c464814610a71578063ad615dec14610ac8578063baa2abde14610b2b578063c45a015514610bff5761012a565b806338ed1739116100f257806338ed1739146105465780634a25d94a1461065f578063792eb791146107785780637ff36ab5146107f357806385f8c259146108f55761012a565b806302751cec1461012f578063054d50d4146101e357806318cbafe5146102465780631f00ca741461035f5780632195995c14610444575b600080fd5b34801561013b57600080fd5b506101c6600480360360c081101561015257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611138565b604051808381526020018281526020019250505060405180910390f35b3480156101ef57600080fd5b506102306004803603606081101561020657600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050611146565b6040518082815260200191505060405180910390f35b34801561025257600080fd5b50610308600480360360a081101561026957600080fd5b8101908080359060200190929190803590602001909291908035906020019064010000000081111561029a57600080fd5b8201836020820111156102ac57600080fd5b803590602001918460208302840111640100000000831117156102ce57600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061114f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561034b578082015181840152602081019050610330565b505050509050019250505060405180910390f35b34801561036b57600080fd5b506103ed6004803603604081101561038257600080fd5b8101908080359060200190929190803590602001906401000000008111156103a957600080fd5b8201836020820111156103bb57600080fd5b803590602001918460208302840111640100000000831117156103dd57600080fd5b909192939192939050505061115b565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610430578082015181840152602081019050610415565b505050509050019250505060405180910390f35b34801561045057600080fd5b50610529600480360361016081101561046857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803515159060200190929190803560ff16906020019092919080359060200190929190803590602001909291905050506112ed565b604051808381526020018281526020019250505060405180910390f35b34801561055257600080fd5b50610608600480360360a081101561056957600080fd5b8101908080359060200190929190803590602001909291908035906020019064010000000081111561059a57600080fd5b8201836020820111156105ac57600080fd5b803590602001918460208302840111640100000000831117156105ce57600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611300565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561064b578082015181840152602081019050610630565b505050509050019250505060405180910390f35b34801561066b57600080fd5b50610721600480360360a081101561068257600080fd5b810190808035906020019092919080359060200190929190803590602001906401000000008111156106b357600080fd5b8201836020820111156106c557600080fd5b803590602001918460208302840111640100000000831117156106e757600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115b5565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610764578082015181840152602081019050610749565b505050509050019250505060405180910390f35b34801561078457600080fd5b506107f16004803603606081101561079b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115c1565b005b61089e6004803603608081101561080957600080fd5b81019080803590602001909291908035906020019064010000000081111561083057600080fd5b82018360208201111561084257600080fd5b8035906020019184602083028401116401000000008311171561086457600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611802565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156108e15780820151818401526020810190506108c6565b505050509050019250505060405180910390f35b34801561090157600080fd5b506109426004803603606081101561091857600080fd5b8101908080359060200190929190803590602001909291908035906020019092919050505061180d565b6040518082815260200191505060405180910390f35b34801561096457600080fd5b50610a1a600480360360a081101561097b57600080fd5b810190808035906020019092919080359060200190929190803590602001906401000000008111156109ac57600080fd5b8201836020820111156109be57600080fd5b803590602001918460208302840111640100000000831117156109e057600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611816565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610a5d578082015181840152602081019050610a42565b505050509050019250505060405180910390f35b348015610a7d57600080fd5b50610a86611b11565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ad457600080fd5b50610b1560048036036060811015610aeb57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050611b16565b6040518082815260200191505060405180910390f35b348015610b3757600080fd5b50610be2600480360360e0811015610b4e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b1f565b604051808381526020018281526020019250505060405180910390f35b348015610c0b57600080fd5b50610c14611b2e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610c6257600080fd5b50610ce460048036036040811015610c7957600080fd5b810190808035906020019092919080359060200190640100000000811115610ca057600080fd5b820183602082011115610cb257600080fd5b80359060200191846020830284011164010000000083111715610cd457600080fd5b9091929391929390505050611b33565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610d27578082015181840152602081019050610d0c565b505050509050019250505060405180910390f35b348015610d4757600080fd5b50610e006004803603610140811015610d5f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803515159060200190929190803560ff1690602001909291908035906020019092919080359060200190929190505050611cc5565b604051808381526020018281526020019250505060405180910390f35b348015610e2957600080fd5b50610e8c60048036036040811015610e4057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cd7565b6040518082815260200191505060405180910390f35b348015610eae57600080fd5b50610f646004803603610100811015610ec657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611cfc565b60405180848152602001838152602001828152602001935050505060405180910390f35b611012600480360360c0811015610f9e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ef4565b60405180848152602001838152602001828152602001935050505060405180910390f35b6110e16004803603608081101561104c57600080fd5b81019080803590602001909291908035906020019064010000000081111561107357600080fd5b82018360208201111561108557600080fd5b803590602001918460208302840111640100000000831117156110a757600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611f05565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015611124578082015181840152602081019050611109565b505050509050019250505060405180910390f35b600080965096945050505050565b60009392505050565b60609695505050505050565b606060008383600081811061116c57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16905060008484600181811061119a57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1690506000611263670de0b6b3a7640000611255896000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f1090919063ffffffff16565b611f9690919063ffffffff16565b9050600267ffffffffffffffff8111801561127d57600080fd5b506040519080825280602002602001820160405280156112ac5781602001602082028036833780820191505090505b50935080846000815181106112bd57fe5b60200260200101818152505086846001815181106112d757fe5b6020026020010181815250505050509392505050565b6000809b509b9950505050505050505050565b606060008585600081811061131157fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16905060008686600181811061133f57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff169050600061145a670de0b6b3a764000061144c8c6000808d8d600081811061138057fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d8d60018181106113e657fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f1090919063ffffffff16565b611f9690919063ffffffff16565b9050888110156114d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f496e73756666696369656e7420416d6f756e740000000000000000000000000081525060200191505060405180910390fd5b6114fd86828473ffffffffffffffffffffffffffffffffffffffff1661201f9092919063ffffffff16565b61152a33308c8673ffffffffffffffffffffffffffffffffffffffff166121fb909392919063ffffffff16565b600267ffffffffffffffff8111801561154257600080fd5b506040519080825280602002602001820160405280156115715781602001602082028036833780820191505090505b509350898460008151811061158257fe5b602002602001018181525050808460018151811061159c57fe5b6020026020010181815250505050509695505050505050565b60609695505050505050565b806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561168957600080fd5b505afa15801561169d573d6000803e3d6000fd5b505050506040513d60208110156116b357600080fd5b810190808051906020019092919050505060ff16600a0a905060008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561171457600080fd5b505afa158015611728573d6000803e3d6000fd5b505050506040513d602081101561173e57600080fd5b810190808051906020019092919050505060ff16600a0a905061177c8361176e8385611f1090919063ffffffff16565b611f9690919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505050565b606095945050505050565b60009392505050565b606060008585600081811061182757fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16905060008686600181811061185557fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff169050600061191e670de0b6b3a76400006119108c6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f1090919063ffffffff16565b611f9690919063ffffffff16565b905088811115611996576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f496e73756666696369656e7420416d6f756e740000000000000000000000000081525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb878c6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611a1d57600080fd5b505af1158015611a31573d6000803e3d6000fd5b505050506040513d6020811015611a4757600080fd5b810190808051906020019092919050505050611a863330838673ffffffffffffffffffffffffffffffffffffffff166121fb909392919063ffffffff16565b600267ffffffffffffffff81118015611a9e57600080fd5b50604051908082528060200260200182016040528015611acd5781602001602082028036833780820191505090505b5093508084600081518110611ade57fe5b6020026020010181815250508984600181518110611af857fe5b6020026020010181815250505050509695505050505050565b600090565b60009392505050565b60008097509795505050505050565b600090565b6060600083836000818110611b4457fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff169050600084846001818110611b7257fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1690506000611c3b670de0b6b3a7640000611c2d896000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f1090919063ffffffff16565b611f9690919063ffffffff16565b9050600267ffffffffffffffff81118015611c5557600080fd5b50604051908082528060200260200182016040528015611c845781602001602082028036833780820191505090505b5093508684600081518110611c9557fe5b6020026020010181815250508084600181518110611caf57fe5b6020026020010181815250505050509392505050565b6000809a509a98505050505050505050565b6000602052816000526040600020602052806000526040600020600091509150505481565b6000806000611d2e33308b8e73ffffffffffffffffffffffffffffffffffffffff166121fb909392919063ffffffff16565b8973ffffffffffffffffffffffffffffffffffffffff166323b872dd33308b6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611de957600080fd5b505af1158015611dfd573d6000803e3d6000fd5b505050506040513d6020811015611e1357600080fd5b81019080805190602001909291905050505060008b73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611e6d57600080fd5b505afa158015611e81573d6000803e3d6000fd5b505050506040513d6020811015611e9757600080fd5b810190808051906020019092919050505060ff16600a0a90506000611ed78b611ec9848d611f1090919063ffffffff16565b611f9690919063ffffffff16565b9050611ee48d8d836115c1565b5050985098509895505050505050565b600080600096509650969350505050565b606095945050505050565b600080831415611f235760009050611f90565b6000828402905082848281611f3457fe5b0414611f8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061243e6021913960400191505060405180910390fd5b809150505b92915050565b600080821161200d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b81838161201657fe5b04905092915050565b600060608473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001925050506040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083106120f857805182526020820191506020810190506020830392506120d5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461215a576040519150601f19603f3d011682016040523d82523d6000602084013e61215f565b606091505b509150915081801561219f575060008151148061219e575080806020019051602081101561218c57600080fd5b81019080805190602001909291905050505b5b6121f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d81526020018061245f602d913960400191505060405180910390fd5b5050505050565b600060608573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200193505050506040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061230857805182526020820191506020810190506020830392506122e5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461236a576040519150601f19603f3d011682016040523d82523d6000602084013e61236f565b606091505b50915091508180156123af57506000815114806123ae575080806020019051602081101561239c57600080fd5b81019080805190602001909291905050505b5b612404576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061240d6031913960400191505060405180910390fd5b50505050505056fe5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564a2646970667358221220930aea3c0d2ad23fe49fa5d28b154f94cd97cc6846d1d08b65ea7aacd143f9a864736f6c634300060a0033";

type UniswapV2Router02MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV2Router02MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV2Router02Mock__factory extends ContractFactory {
  constructor(...args: UniswapV2Router02MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniswapV2Router02Mock";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapV2Router02Mock> {
    return super.deploy(overrides || {}) as Promise<UniswapV2Router02Mock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UniswapV2Router02Mock {
    return super.attach(address) as UniswapV2Router02Mock;
  }
  connect(signer: Signer): UniswapV2Router02Mock__factory {
    return super.connect(signer) as UniswapV2Router02Mock__factory;
  }
  static readonly contractName: "UniswapV2Router02Mock";
  public readonly contractName: "UniswapV2Router02Mock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV2Router02MockInterface {
    return new utils.Interface(_abi) as UniswapV2Router02MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV2Router02Mock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UniswapV2Router02Mock;
  }
}
